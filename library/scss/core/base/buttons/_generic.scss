//-------------------------------------
//  Springboard: core/base/buttons/singles
//  
//-------------------------------------


// ----- Buttons settings ----- //
$print-base-button-single-classes:		$print-base-button-classes		!default;

$sb-button-color:				lighten($sb-font-color, 40%)	!default;


// ----- Buttons Mixins ----- //
@mixin sb-button($button-background: $sb-button-color) {
	border: 0;
	font-family: $sb-sans;
	font-weight: 300;
	font-size: 1em;
	cursor: pointer;
	position: relative;
	background: $button-background;
	max-width: 100%;
	margin: 0;
	color: white;

	&:hover, &:focus, &%sb-button-hover {
		@if $button-background != 'transparent' {
			@include background(linear-gradient(top, lighten($button-background, 5%), $button-background));
			@include box-shadow(0px 2px 3px 0px rgba(0, 0, 0, .25));
		}
	}

	&:active, &%sb-button-active {
		@include box-shadow(inset 0px 2px 3px 1px rgba(0, 0, 0, .25));
		@if $button-background != 'transparent' {
			background: darken($button-background, 10%);
		}
	}

	&[disabled], &%sb-button-disabled {
		@if $button-background != 'transparent' {
			background: lighten($button-background, 30%);
		}
		color: lighten($sb-font-color, 30%);
		cursor: not-allowed;
	}
}

@mixin sb-button-generator($button-color: $sb-button-color, $padding: $sb-s-spacing $sb-m-spacing){
	@include sb-button($button-color);
}

// ----- Buttons Placeholders ----- //
%sb-button {
	@include sb-button-generator;
	line-height: 2;
	padding: 0 $sb-m-spacing;
}


// ----- Buttons styles & classes ----- //
@if $print-base-button-single-classes == true {
	.sb-button {
		@extend %sb-button;
	}
}
