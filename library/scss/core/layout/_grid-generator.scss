//-------------------------------------
//  Springboard: core/layout/grid-generator
//  This mixin generates grid placeholders to be extended.
//  Place the mixin in a media query and extend it like normal for responsive grids.
//-------------------------------------


@mixin grid-generator($sb-gg-prefix: 'sb-grid', $sb-gg-max-width: 1030px, $sb-gg-total-columns: 12, $sb-gg-column-width: 72px, $sb-gg-gutter: 30px, $sb-gg-spacing: -10px, $sb-gg-inline: false) {
	
	// If it's not a fluid grid
	@if unit($sb-gg-column-width) == 'px' {

		%#{$sb-gg-prefix}-container { 
			width: ( ($sb-gg-total-columns * $sb-gg-column-width) + (($sb-gg-total-columns) * $sb-gg-gutter) );	
			max-width: $sb-gg-max-width;	
			list-style:none;
			margin:0 auto;
			padding:0;
			margin-left:-$sb-gg-gutter;
			zoom:1;
		    
		    &:before,
		    &:after{
		        content:" ";
		        display:table;
		    }
		    
		    &:after{
		        clear:both;
		    }

			@if $sb-gg-inline {
				list-style:none;
				font-size: 0px;
				letter-spacing: $sb-gg-spacing;
				word-spacing: $sb-gg-spacing;
			} 
		}


		@for $sb-gg-column-count from 1 through $sb-gg-total-columns {
			%#{$sb-gg-prefix}-#{$sb-gg-column-count} {
				width: $sb-gg-column-count * $sb-gg-column-width + ($sb-gg-column-count - 1) * $sb-gg-gutter;
				margin-left: $gsb-gg-utter;

				@if $sb-gg-inline {
					display:inline-block;
					padding-left: 0;
					vertical-align:top;
					letter-spacing:normal;
					word-spacing:normal;
					font-size: medium;
				} @else {
					float: left;
				}
			}
		}

		// separate these out so they override the above
		$sb-gg-column-counter: 1;
		@while $sb-gg-column-counter < $sb-gg-total-columns {
			%#{$sb-gg-prefix}-push-#{$sb-gg-column-counter} {
				margin-left: $column-counter * $column-width + $column-counter * $gutter + $gutter;
			}

			%#{$sb-gg-prefix}-pull-#{$sb-gg-column-counter} {
				margin-left: ($sb-gg-column-counter * $sb-gg-column-width + $sb-gg-column-counter * $sb-gg-gutter + $sb-gg-gutter) * -1;
			}

			$sb-gg-column-counter: $sb-gg-column-counter + 1;
		}
	} @else if unit($sb-gg-column-width) == '%' {

		%#{$sb-gg-prefix}-container { 
			width: 100% + $sb-gg-gutter;
			max-width: $sb-gg-max-width;
			padding:0;
			margin-left:-$sb-gg-gutter; 
			zoom:1;
			list-style: none;
						margin:0 auto;

		    
		    &:before,
		    &:after{
		        content:" ";
		        display:table;
		    }
		    
		    &:after{
		        clear:both;
		    }

			@if $sb-gg-inline {
				list-style:none;
				font-size: 1px;
				letter-spacing: $sb-gg-spacing;
				word-spacing: $sb-gg-spacing;
			} 
		}


		@for $sb-gg-column-count from 1 through $sb-gg-total-columns {
			%#{$sb-gg-prefix}-#{$sb-gg-column-count} {
				width: percentage($sb-gg-column-count / $sb-gg-total-columns);
				padding-left: $sb-gg-gutter; 

				@if $sb-gg-inline {
					display:inline-block;
					padding-left: 0;
					vertical-align:top;
					letter-spacing:normal;
					word-spacing:normal;
					font-size: medium;
				} @else {
					float: left;
				}
			}
		}

		// separate these out so they override the above
		
		$sb-gg-column-counter: 1;
		@while $sb-gg-column-counter < $sb-gg-total-columns {
			%#{$sb-gg-prefix}-push-#{$sb-gg-column-counter} {
				margin-left: $sb-gg-column-counter * $sb-gg-column-width + $sb-gg-column-counter * $sb-gg-gutter + $sb-gg-gutter;
			}

			%#{$sb-gg-prefix}-pull-#{$sb-gg-column-counter} {
				margin-left: ($sb-gg-column-counter * $sb-gg-column-width + $sb-gg-column-counter * $sb-gg-gutter + $sb-gg-gutter) * -1;
			}

			$sb-gg-column-counter: $sb-gg-column-counter + 1;
		}
	}
}

